package day08;

public class 복습 {
    public static void main(String[] args) {


        /*

            데이터/자료 저장
                -다시 쓸려고
                -리터럴, 객체를 저장
                -자료형 변수명= 리터럴 혹은 객체 혹은 메소드반환값



         */
        //회원 정보의  이름과 나이 1명 저장
            String name= "유재석";
            int age= 40; //데이터타입이 달라 배열에 저장못함 (일일히 저장해야됨)
                //vs
            회원 m1=new 회원();
            m1.name= "유재석";
            m1.age=40; //데이터타입이 모두 같기 때문에 배열 저장 가능(노가다 안해도됨)

        //2.100명 저장해주세요.
               //name 변수와 age 변수를 x100생성
              //가능하지만, 변수가 많아지면 관리가 힘들다.
             //붕어빵 만들기 위해 붕어빨 틀을 만드는 것처럼
            //회원 1명을 만들기 위해 회원틀을 만들자 --> 클래스 만들자
        //자바에서의 배열은 같은 타입의 자료끼리 저장 가능.
            //1.
            String[] names=new String[100];
            int[] ages= new int[100];
            //2.
            회원[] members= new 회원[100];

            //3. 생성자: 클래스 생성(만드는 것) : 객체를 생성하기 위해
                //클래스 만드는 이유: 객체를 만들기 위해
                    //객체를 왜 만드는지? : 객체는 속성과 메소드를 구성된 고유성질과 메소드/행위 로 구성된 하나의 실체
                        //왜 실체가 필요한지? : 현실세계를 디지털화 시키기 위해
                            //디지털화를 왜 ㅅㅣ키는지? : 컴퓨터는 피로도가 없고 전기세가 있으면 사람대신 일을 하니까.
                        //예] 쿠팡 물류 공장에서 내가 제품을 포장을 하는 역할
                            //- 사람은 피로도, 급여가 들어감
                            //- 포장하는 행위/메소드를 객체화 시킴 --> 사람대신에 컴퓨터가 포장하는 행위/메소드
                                //- 포장을 어떻게 하는지? 순서? 알고리즘/순서도
                                //- 박스 선택 -> 박스 접고- > 제품 넣고-> 박스 테이핑 -> 점검
        //
        //1.기본[디폴트] 생성자
            //new 연산자 앞에 클래스명과 동일한 --> 생성자
            게시판 b1= new 게시판(); //생성자 선언
            b1.번호=1;
            b1.제목 = "안녕하세요";


            //vs
        //  게시판 b2= new 게시판("안녕하세요",2);
            //선언된 생성자와 우리가 생성자 대입한 타입이 불일치 라서 오류
        게시판 b3= new 게시판(2, "안녕하세요");
            //




    }
}
